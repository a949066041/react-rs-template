/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as PageImport } from './routes/$page'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthPageImport } from './routes/_auth/page'
import { Route as AuthNestedMenu2Import } from './routes/_auth/nested/menu2'
import { Route as AuthSystemUserIndexImport } from './routes/_auth/system/user/index'
import { Route as AuthSystemRoleIndexImport } from './routes/_auth/system/role/index'
import { Route as AuthSystemMenuIndexImport } from './routes/_auth/system/menu/index'
import { Route as AuthSystemDictIndexImport } from './routes/_auth/system/dict/index'
import { Route as AuthNestedMenu1Menu12Import } from './routes/_auth/nested/menu1/menu1-2'
import { Route as AuthNestedMenu1Menu11Import } from './routes/_auth/nested/menu1/menu1-1'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const PageRoute = PageImport.update({
  id: '/$page',
  path: '/$page',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPageRoute = AuthPageImport.update({
  id: '/page',
  path: '/page',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNestedMenu2Route = AuthNestedMenu2Import.update({
  id: '/nested/menu2',
  path: '/nested/menu2',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSystemUserIndexRoute = AuthSystemUserIndexImport.update({
  id: '/system/user/',
  path: '/system/user/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSystemRoleIndexRoute = AuthSystemRoleIndexImport.update({
  id: '/system/role/',
  path: '/system/role/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSystemMenuIndexRoute = AuthSystemMenuIndexImport.update({
  id: '/system/menu/',
  path: '/system/menu/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSystemDictIndexRoute = AuthSystemDictIndexImport.update({
  id: '/system/dict/',
  path: '/system/dict/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNestedMenu1Menu12Route = AuthNestedMenu1Menu12Import.update({
  id: '/nested/menu1/menu1-2',
  path: '/nested/menu1/menu1-2',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNestedMenu1Menu11Route = AuthNestedMenu1Menu11Import.update({
  id: '/nested/menu1/menu1-1',
  path: '/nested/menu1/menu1-1',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$page': {
      id: '/$page'
      path: '/$page'
      fullPath: '/$page'
      preLoaderRoute: typeof PageImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/page': {
      id: '/_auth/page'
      path: '/page'
      fullPath: '/page'
      preLoaderRoute: typeof AuthPageImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/nested/menu2': {
      id: '/_auth/nested/menu2'
      path: '/nested/menu2'
      fullPath: '/nested/menu2'
      preLoaderRoute: typeof AuthNestedMenu2Import
      parentRoute: typeof AuthImport
    }
    '/_auth/nested/menu1/menu1-1': {
      id: '/_auth/nested/menu1/menu1-1'
      path: '/nested/menu1/menu1-1'
      fullPath: '/nested/menu1/menu1-1'
      preLoaderRoute: typeof AuthNestedMenu1Menu11Import
      parentRoute: typeof AuthImport
    }
    '/_auth/nested/menu1/menu1-2': {
      id: '/_auth/nested/menu1/menu1-2'
      path: '/nested/menu1/menu1-2'
      fullPath: '/nested/menu1/menu1-2'
      preLoaderRoute: typeof AuthNestedMenu1Menu12Import
      parentRoute: typeof AuthImport
    }
    '/_auth/system/dict/': {
      id: '/_auth/system/dict/'
      path: '/system/dict'
      fullPath: '/system/dict'
      preLoaderRoute: typeof AuthSystemDictIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/system/menu/': {
      id: '/_auth/system/menu/'
      path: '/system/menu'
      fullPath: '/system/menu'
      preLoaderRoute: typeof AuthSystemMenuIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/system/role/': {
      id: '/_auth/system/role/'
      path: '/system/role'
      fullPath: '/system/role'
      preLoaderRoute: typeof AuthSystemRoleIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/system/user/': {
      id: '/_auth/system/user/'
      path: '/system/user'
      fullPath: '/system/user'
      preLoaderRoute: typeof AuthSystemUserIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthPageRoute: typeof AuthPageRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthNestedMenu2Route: typeof AuthNestedMenu2Route
  AuthNestedMenu1Menu11Route: typeof AuthNestedMenu1Menu11Route
  AuthNestedMenu1Menu12Route: typeof AuthNestedMenu1Menu12Route
  AuthSystemDictIndexRoute: typeof AuthSystemDictIndexRoute
  AuthSystemMenuIndexRoute: typeof AuthSystemMenuIndexRoute
  AuthSystemRoleIndexRoute: typeof AuthSystemRoleIndexRoute
  AuthSystemUserIndexRoute: typeof AuthSystemUserIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthPageRoute: AuthPageRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthNestedMenu2Route: AuthNestedMenu2Route,
  AuthNestedMenu1Menu11Route: AuthNestedMenu1Menu11Route,
  AuthNestedMenu1Menu12Route: AuthNestedMenu1Menu12Route,
  AuthSystemDictIndexRoute: AuthSystemDictIndexRoute,
  AuthSystemMenuIndexRoute: AuthSystemMenuIndexRoute,
  AuthSystemRoleIndexRoute: AuthSystemRoleIndexRoute,
  AuthSystemUserIndexRoute: AuthSystemUserIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/$page': typeof PageRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/page': typeof AuthPageRoute
  '/': typeof AuthIndexRoute
  '/nested/menu2': typeof AuthNestedMenu2Route
  '/nested/menu1/menu1-1': typeof AuthNestedMenu1Menu11Route
  '/nested/menu1/menu1-2': typeof AuthNestedMenu1Menu12Route
  '/system/dict': typeof AuthSystemDictIndexRoute
  '/system/menu': typeof AuthSystemMenuIndexRoute
  '/system/role': typeof AuthSystemRoleIndexRoute
  '/system/user': typeof AuthSystemUserIndexRoute
}

export interface FileRoutesByTo {
  '/$page': typeof PageRoute
  '/login': typeof LoginRoute
  '/page': typeof AuthPageRoute
  '/': typeof AuthIndexRoute
  '/nested/menu2': typeof AuthNestedMenu2Route
  '/nested/menu1/menu1-1': typeof AuthNestedMenu1Menu11Route
  '/nested/menu1/menu1-2': typeof AuthNestedMenu1Menu12Route
  '/system/dict': typeof AuthSystemDictIndexRoute
  '/system/menu': typeof AuthSystemMenuIndexRoute
  '/system/role': typeof AuthSystemRoleIndexRoute
  '/system/user': typeof AuthSystemUserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$page': typeof PageRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/page': typeof AuthPageRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/nested/menu2': typeof AuthNestedMenu2Route
  '/_auth/nested/menu1/menu1-1': typeof AuthNestedMenu1Menu11Route
  '/_auth/nested/menu1/menu1-2': typeof AuthNestedMenu1Menu12Route
  '/_auth/system/dict/': typeof AuthSystemDictIndexRoute
  '/_auth/system/menu/': typeof AuthSystemMenuIndexRoute
  '/_auth/system/role/': typeof AuthSystemRoleIndexRoute
  '/_auth/system/user/': typeof AuthSystemUserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$page'
    | ''
    | '/login'
    | '/page'
    | '/'
    | '/nested/menu2'
    | '/nested/menu1/menu1-1'
    | '/nested/menu1/menu1-2'
    | '/system/dict'
    | '/system/menu'
    | '/system/role'
    | '/system/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$page'
    | '/login'
    | '/page'
    | '/'
    | '/nested/menu2'
    | '/nested/menu1/menu1-1'
    | '/nested/menu1/menu1-2'
    | '/system/dict'
    | '/system/menu'
    | '/system/role'
    | '/system/user'
  id:
    | '__root__'
    | '/$page'
    | '/_auth'
    | '/login'
    | '/_auth/page'
    | '/_auth/'
    | '/_auth/nested/menu2'
    | '/_auth/nested/menu1/menu1-1'
    | '/_auth/nested/menu1/menu1-2'
    | '/_auth/system/dict/'
    | '/_auth/system/menu/'
    | '/_auth/system/role/'
    | '/_auth/system/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PageRoute: typeof PageRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  PageRoute: PageRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$page",
        "/_auth",
        "/login"
      ]
    },
    "/$page": {
      "filePath": "$page.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/page",
        "/_auth/",
        "/_auth/nested/menu2",
        "/_auth/nested/menu1/menu1-1",
        "/_auth/nested/menu1/menu1-2",
        "/_auth/system/dict/",
        "/_auth/system/menu/",
        "/_auth/system/role/",
        "/_auth/system/user/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/page": {
      "filePath": "_auth/page.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/nested/menu2": {
      "filePath": "_auth/nested/menu2.tsx",
      "parent": "/_auth"
    },
    "/_auth/nested/menu1/menu1-1": {
      "filePath": "_auth/nested/menu1/menu1-1.tsx",
      "parent": "/_auth"
    },
    "/_auth/nested/menu1/menu1-2": {
      "filePath": "_auth/nested/menu1/menu1-2.tsx",
      "parent": "/_auth"
    },
    "/_auth/system/dict/": {
      "filePath": "_auth/system/dict/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/system/menu/": {
      "filePath": "_auth/system/menu/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/system/role/": {
      "filePath": "_auth/system/role/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/system/user/": {
      "filePath": "_auth/system/user/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
